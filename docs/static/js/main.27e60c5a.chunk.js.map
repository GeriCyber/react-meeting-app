{"version":3,"sources":["components/Footer.jsx","components/Form.jsx","components/Meeting.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","rel","href","target","Form","createMeeting","useState","name","subject","host","date","time","meeting","updateMeeting","error","updateError","updateState","event","value","onSubmit","preventDefault","trim","length","id","uuidv4","type","className","placeholder","onChange","Meeting","deleteMeeting","onClick","App","initialMeetings","JSON","parse","localStorage","getItem","meetings","saveMeetings","useEffect","setItem","stringify","meetingsFiltered","filter","title","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27e60c5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => (\r\n   <footer>\r\n       Designed & Adapted by&nbsp;\r\n       <a rel=\"noreferrer\" href=\"https://gericyber.github.io/\" target=\"_blank\">\r\n           gericyber\r\n      </a>\r\n   </footer>\r\n);\r\n \r\nexport default Footer;","import React, {Fragment, useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({createMeeting}) => {\r\n\r\n    // Meeting state\r\n    const [meeting, updateMeeting] = useState({\r\n        name: '',\r\n        subject: '',\r\n        host: '',\r\n        date: '',\r\n        time: '',\r\n    });\r\n\r\n    // Error state\r\n    const [error, updateError] = useState(false);\r\n\r\n    // Change detection for inputs, update state\r\n    const updateState = event => {\r\n        updateMeeting({\r\n            ...meeting,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const submitData = event => {\r\n        event.preventDefault();\r\n\r\n        // Validate data submited\r\n        if(name.trim().length === 0 || subject.trim().length === 0 || \r\n            date.trim().length === 0 || date.trim().length === 0) {\r\n          // Update error state\r\n            updateError(true);\r\n            return;\r\n        }\r\n\r\n        // Update error state\r\n        updateError(false);\r\n\r\n        // Generate unique id\r\n        meeting.id = uuidv4();\r\n\r\n        // Create meeting\r\n        createMeeting(meeting);\r\n\r\n        // Reset Form\r\n        updateMeeting({\r\n            name: '',\r\n            subject: '',\r\n            host: '',\r\n            date: '',\r\n            time: '',\r\n        })\r\n    }\r\n\r\n    const {name, subject, host, date, time,} = meeting;\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h4>Create Meeting</h4>\r\n            <form onSubmit={submitData}>\r\n                <label>Meeting name</label>\r\n                <input type=\"text\"\r\n                     name=\"name\"\r\n                     className=\"u-full-width\"\r\n                     placeholder=\"Meeting name\"\r\n                     onChange={updateState}\r\n                     value={name}\r\n              />\r\n\r\n                <label>Meeting subject</label>\r\n                <textarea className=\"u-full-width\"\r\n                        name=\"subject\"\r\n                        placeholder=\"What's the meeting about?\"\r\n                        onChange={updateState}\r\n                        value={subject}\r\n              >\r\n              </textarea>\r\n\r\n                <label>Meeting host</label>\r\n                <input type=\"text\"\r\n                     name=\"host\"\r\n                     className=\"u-full-width\"\r\n                     placeholder=\"Meeting host email\"\r\n                     onChange={updateState}\r\n                     value={host}\r\n              />\r\n\r\n                <label>Date</label>\r\n                <input type=\"date\"\r\n                     name=\"date\"\r\n                     className=\"u-full-width\"\r\n                     onChange={updateState}\r\n                     value={date}\r\n              />\r\n\r\n                <label>Time</label>\r\n                <input type=\"time\"\r\n                     name=\"time\"\r\n                     className=\"u-full-width\"\r\n                     onChange={updateState}\r\n                     value={time}\r\n              />\r\n\r\n                { error ? \r\n                    <p className=\"alert-error\">All fields are required</p>\r\n                    :\r\n                    null\r\n                }       \r\n\r\n                <button type=\"submit\"\r\n                      className=\"u-full-width button-success\"\r\n              >\r\n                  Create Meeting +\r\n              </button>\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nForm.propTypes = {\r\n    createMeeting: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Meeting = ({meeting, deleteMeeting}) => (\r\n    <div className=\"meeting\">\r\n        <p>Meeting:&nbsp;\r\n            <span>\r\n                {meeting.name}\r\n            </span>\r\n        </p>\r\n        <p>Subject:&nbsp;\r\n            <span>\r\n                {meeting.subject}\r\n            </span>\r\n        </p>\r\n        <p>Host:&nbsp; \r\n            <span>\r\n                {meeting.host}\r\n            </span>\r\n        </p>\r\n        <p>Date:&nbsp; \r\n            <span>\r\n                {meeting.date}\r\n            </span>\r\n        </p>\r\n        <p>Time:&nbsp; \r\n            <span>\r\n                {meeting.time}\r\n            </span>\r\n        </p>\r\n        <button className=\"delete button u-full-width\"\r\n                onClick={() => deleteMeeting(meeting.id)}\r\n        >\r\n            Delete &times;\r\n        </button>\r\n    </div>\r\n);\r\n\r\nMeeting.propTypes = {\r\n    meeting: PropTypes.object.isRequired,\r\n    deleteMeeting: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Meeting;","import React, {Fragment, useState, useEffect} from 'react';\nimport Footer from './components/Footer.jsx';\nimport Form from './components/Form.jsx'\nimport Meeting from './components/Meeting.jsx'\n\nfunction App() {\n\n  // Initial meetings\n  let initialMeetings = JSON.parse(localStorage.getItem('meetings'));\n  if (!initialMeetings) {\n    initialMeetings = [];\n  }\n\n  // meetings array\n  const [meetings, saveMeetings] = useState(initialMeetings);\n\n  // Every time state changes update local storage with data from state\n  useEffect(() => {\n    if (initialMeetings) {\n      localStorage.setItem('meetings', JSON.stringify(meetings));\n    } else {\n      localStorage.setItem('meetings', JSON.stringify([]));\n    }\n  }, [meetings, initialMeetings])\n\n  // Save the created meeting in the meetings array\n  // Update meetings array state\n  const createMeeting = meeting => {\n    saveMeetings([\n      ...meetings,\n      meeting\n    ])\n  }\n\n  // Delete meeting by id\n  const deleteMeeting = id => {\n    const meetingsFiltered = meetings.filter(meeting => meeting.id !== id);\n    saveMeetings(meetingsFiltered);\n  }\n\n  const title = meetings.length === 0 ? 'No meetings yet!' : 'Manage your Meetings';\n\n  return (\n    <Fragment>\n      <h1><span className=\"title\">Meeting Administration</span></h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Form\n              createMeeting={createMeeting}\n            />\n          </div>\n          <div className=\"one-half column\">\n          <h4>{title}</h4>\n          <div className=\"meeting-container\">\n            {\n              meetings.map(meeting => (\n                <Meeting \n                  key={meeting.id} \n                  meeting={meeting}\n                  deleteMeeting={deleteMeeting} />\n              ))\n            }\n          </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}